<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>filebrowser + nginx 建立自定義網域下載</title>
      <link href="/2025/07/09/fbs-share/"/>
      <url>/2025/07/09/fbs-share/</url>
      
        <content type="html"><![CDATA[<h2 id="動機"><a href="#動機" class="headerlink" title="動機"></a>動機</h2><p>因為系上的實驗室內部有架設 filebrowser 提供檔案傳輸的服務，但最近遇到一個問題，在下載檔案時 filebrowser 會透過 JSON Web Token (JWT) 來驗證使用者，憑證輸入後會導致網址變得非常難看。因為常常會使用 wget 來下載檔案，不想要輸入又臭又長的網址，因此想出了一個方法解決了網址超長且意義不明確的問題。</p><ul><li><strong>因為輸入 token 導致網址超長</strong><br><img src="/../assets/post_image/Pasted%20image%2020250715214725.png" alt="long token"></li></ul><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>透過 filebrowser 的邀請碼的方式來讓使用者下載檔案時不需要輸入 token，這樣也就意味著網址不會又臭又長的，而且可以搭配 Nginx 反向代理來進行訪問限制與轉發，使用自定義網域來指向邀請碼所提供的分享連結進行檔案下載。</p><h2 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h2><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>打開 filebrowser ，創建一個主資料夾，用來存放 filebrowser 裡的檔案，然後為它創建一個邀請碼，時間可以設訂 999 小時(含以上)，確保連結不會在短期失效。</p><ul><li><strong>邀請碼創建完畢</strong><br><img src="/../assets/post_image/Pasted%20image%2020250709214512.png" alt="share code"></li></ul><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>創建完邀請碼後，透過邀請碼旁邊的複製按鈕，來取得分享連結。</p><h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><p>透過 Nginx 來設定網路規則讓連線指向我們的分享連結，並禁止訪問特定的網址。<br>設定完之後就能夠透過指定網域來進行下載檔案啦!</p><p>nginx 設定範例:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> <span class="regexp">~ ^/dl/.+</span> &#123;</span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^/dl/(.*)$</span> /api/public/dl/juG-7DV_/<span class="variable">$1</span> <span class="literal">break</span>; <span class="comment"># dl/ 後面要改成自己的邀請碼</span></span><br><span class="line">    <span class="attribute">proxy_pass</span> http://172.16.3.49:4100;  <span class="comment"># 指向你的 Filebrowser 服務</span></span><br><span class="line">    <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 阻擋其他路徑訪問</span></span><br><span class="line"><span class="section">location</span> <span class="regexp">~ ^/api/public/dl/[^/]+/?$</span> &#123;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">location</span> = /dl &#123;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">    <span class="attribute">deny</span> all;</span><br><span class="line">    <span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">autoindex</span> <span class="literal">off</span>;</span><br></pre></td></tr></table></figure><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>依照你在 nginx 設定的網域並加上 <code>dl/&lt;目錄名稱or檔案名稱&gt;</code> 來下載你的檔案。</p><blockquote><p>範例: <code>https://abc.com/dl/&lt;目錄名稱or檔案名稱&gt;</code></p></blockquote><h2 id="如何發現"><a href="#如何發現" class="headerlink" title="如何發現"></a>如何發現</h2><p>使用 filebrowser 一段時間了，只知道可以透過邀請碼來下載檔案，事發後突然想到邀請碼不需要輸入 token 就能夠下載檔案，而且連結可以保留很長一段時間，因此我開始嘗試使用邀請碼來固定下載連結，後來又發現使用的連結有特定的格式關係，這讓我想到可以搭配 Nginx 來將我的網域導到這個特定的連結，因此就發現了這個方法解決了網址超長的問題之外，又能夠讓下載連結變得有意義、淺顯易懂。</p><blockquote><ul><li>主資料夾分享的下載連結<br><img src="/../assets/post_image/Pasted%20image%2020250715222840.png" alt="share1"></li><li>主資料夾底下檔案的下載連結<br><img src="/../assets/post_image/Pasted%20image%2020250715223026.png" alt="share2"><br>可以發現以 dl 後為主資料夾的邀請碼，之後裡面的每個資料夾或檔案都是以自己命名的名稱做區分，因此可以很好理解每個檔案的意義，透過 nginx 後，在輸入網址下載時可以只輸入邀請碼後面的部份，而不需要輸入前面重複的網址區塊。</li></ul></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建屬於自己的檔案管理頁面</title>
      <link href="/2025/06/28/filebrowser-service/"/>
      <url>/2025/06/28/filebrowser-service/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天要介紹一個好用的檔案管理工具 FileBrowser，讓我們能夠很方便的管理與修改檔案。</p><h2 id="什麼是-FileBrowser"><a href="#什麼是-FileBrowser" class="headerlink" title="什麼是 FileBrowser"></a>什麼是 FileBrowser</h2><p>FileBrowser 可以連結到遠端的伺服器，讓一般使用者能夠透過瀏覽器的方式來對檔案進行管理 (edit, update, create, delete)，不需要使用終端機。</p><h2 id="如何建置"><a href="#如何建置" class="headerlink" title="如何建置"></a>如何建置</h2><h4 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> alpine:<span class="number">3.21</span>.<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apk update &amp;&amp; apk add --no-cache \</span></span><br><span class="line"><span class="language-bash">    curl wget ca-certificates bash tar grep sed coreutils unzip &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    adduser -h /opt/app -D app &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    curl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./entrypoint /opt/app/entrypoint</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">chmod</span> a+x /opt/app/entrypoint</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span> app</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /opt/app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> /srv</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> /database/filebrowser.db</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="language-bash"> /config/settings.json</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">4100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [ <span class="string">&quot;/opt/app/entrypoint&quot;</span> ]</span></span><br></pre></td></tr></table></figure><h4 id="entrypoint"><a href="#entrypoint" class="headerlink" title="entrypoint"></a>entrypoint</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">filebrowser config init --port 4100 --address <span class="string">&quot;&quot;</span> --baseurl <span class="string">&quot;&quot;</span> --<span class="built_in">log</span> <span class="string">&quot;stdout&quot;</span> --root=<span class="string">&quot;/srv&quot;</span></span><br><span class="line">filebrowser <span class="built_in">users</span> add &lt;name&gt; &lt;password&gt; --perm.admin <span class="comment"># 設定管理員帳戶</span></span><br><span class="line">filebrowser <span class="comment"># 啟動服務</span></span><br></pre></td></tr></table></figure><blockquote><p>密碼長度需大於 12 字元</p></blockquote><h4 id="建置-image"><a href="#建置-image" class="headerlink" title="建置 image"></a>建置 image</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t fbs:alpine3.21.3 .</span><br></pre></td></tr></table></figure><h4 id="啟動服務"><a href="#啟動服務" class="headerlink" title="啟動服務"></a>啟動服務</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> srv database config</span><br><span class="line">docker run --name fbs -dp 4100:4100 -v srv:/srv -v database:/database -v config:/config fbs:alpine3.21.3</span><br></pre></td></tr></table></figure><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>開啟瀏覽器並輸入 <code>&lt;ip&gt;:&lt;port&gt;</code>，進入 filebrowser 就能夠對公開的檔案做管理。<br><img src="/../assets/post_image/filebrowser.png" alt="filebrowser"><br><a href="https://filebrowser.org/index.html">圖片來源</a></p><h2 id="參考文獻"><a href="#參考文獻" class="headerlink" title="參考文獻"></a>參考文獻</h2><ul><li><a href="https://filebrowser.org/">https://filebrowser.org/</a></li><li><a href="https://blog.csdn.net/weixin_48227918/article/details/131798149">https://blog.csdn.net/weixin_48227918/article/details/131798149</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用 WSL + DevContainer 進行程式開發(二)</title>
      <link href="/2025/06/15/wsl-devcontainer-2/"/>
      <url>/2025/06/15/wsl-devcontainer-2/</url>
      
        <content type="html"><![CDATA[<h2 id="什麼是-DevContainer"><a href="#什麼是-DevContainer" class="headerlink" title="什麼是 DevContainer"></a>什麼是 DevContainer</h2><h2 id="參考文獻"><a href="#參考文獻" class="headerlink" title="參考文獻"></a>參考文獻</h2><ul><li></li></ul><div class="flink"><div class="flink-name">文章連結</div><div class="flink-list">      <div class="flink-list-item">        <a href="2025/06/15/wsl-devcontainer-1/" title="None" target="_blank">          <div class="flink-item-icon">            <img class="no-lightbox" src="undefined" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="None" />          </div>          <div class="flink-item-name">None</div>          <div class="flink-item-desc" title="上一篇">上一篇</div>        </a>      </div></div></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用 WSL + DevContainer 進行程式開發(一)</title>
      <link href="/2025/06/13/wsl-devcontainer-1/"/>
      <url>/2025/06/13/wsl-devcontainer-1/</url>
      
        <content type="html"><![CDATA[<h2 id="什麼是-WSL"><a href="#什麼是-WSL" class="headerlink" title="什麼是 WSL"></a>什麼是 WSL</h2><p>WSL 全名為 Windows Subsystem for Linux，是一款<font color="orange">能讓使用者在 Windows 作業系統上直接執行 Linux 環境的 Windows 子系統</font>。</p><h2 id="WSL-的版本介紹"><a href="#WSL-的版本介紹" class="headerlink" title="WSL 的版本介紹"></a>WSL 的版本介紹</h2><h3 id="WSL-1"><a href="#WSL-1" class="headerlink" title="WSL 1"></a>WSL 1</h3><p>是採用系統呼叫轉譯 (System Call Translation) 的架構，將 Linux 的命令轉譯成 Windows API，這種方式是在 Windows 上模擬 Linux 的環境。因為每次的動作都要進行轉譯，因此會有執行延遲的問題。</p><p><img src="https://benjr.tw/wp-content/uploads/2019/09/WSL1.png" alt="WSL Architecture"><br><a href="https://www.google.com/url?sa=i&url=https://benjr.tw/102024&psig=AOvVaw1WuM2ujUUpXrAVdzAJh0oA&ust=1750143469697000&source=images&cd=vfe&opi=89978449&ved=0CBQQjRxqFwoTCMCDiNCu9Y0DFQAAAAAdAAAAABAK">圖片來源</a></p><h3 id="WSL-2"><a href="#WSL-2" class="headerlink" title="WSL 2"></a>WSL 2</h3><p>則是採用虛擬機 (Virtual Machine) 的架構，在虛擬機內運行一個完整的 Linux 作業系統，無需透過轉譯的方式，因此執行速度大幅提升。<br><img src="https://www.polarsparc.com/xhtml/images/WSL-01.png" alt="WSL2 Architecture"><br><a href="https://www.google.com/url?sa=i&url=https://www.polarsparc.com/xhtml/IntroToWSL2.html&psig=AOvVaw0VMbhWC8N0blRyxrFUzIPp&ust=1750142709134000&source=images&cd=vfe&opi=89978449&ved=0CBQQjRxqFwoTCICz5uWr9Y0DFQAAAAAdAAAAABAn">圖片來源</a></p><blockquote><p>完整的 WSL 2 架構圖<br><img src="https://i.redd.it/po98dksksjx21.png" alt="Complete WSL2 Architecture"><a href="https://www.google.com/url?sa=i&url=https://www.reddit.com/r/bashonubuntuonwindows/comments/bna3hq/the_complete_diagram_of_the_wsl2_architecture_as/?tl=zh-hant&psig=AOvVaw0VMbhWC8N0blRyxrFUzIPp&ust=1750142709134000&source=images&cd=vfe&opi=89978449&ved=0CBQQjRxqFwoTCICz5uWr9Y0DFQAAAAAdAAAAABAx">圖片來源</a></p></blockquote><h2 id="安裝-WSL"><a href="#安裝-WSL" class="headerlink" title="安裝 WSL"></a>安裝 WSL</h2><ol><li><p>在 windows 功能中打開 <code>Virtual Machine Platform</code> 與 <code>Windows Subsystem for Linux</code><br><img src="/../assets/post_image/windows-features.png" alt="windows features"></p></li><li><p>以系統管理員身分開啟 powershell 執行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --install</span><br></pre></td></tr></table></figure></li><li><p>重啟系統</p></li><li><p>建置第一個 Ubuntu 子系統</p><ul><li>使用 Ubuntu 22.04 版本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --install -d Ubuntu-22.04</span><br></pre></td></tr></table></figure></li></ol><h2 id="WSL-常用的命令"><a href="#WSL-常用的命令" class="headerlink" title="WSL 常用的命令"></a>WSL 常用的命令</h2><p>列出幾個比較常用的命令</p><h3 id="列出所有可用的-Linux"><a href="#列出所有可用的-Linux" class="headerlink" title="列出所有可用的 Linux"></a>列出所有可用的 Linux</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --list --online</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">The</span> following is a list of valid distributions that can be installed.</span><br><span class="line"><span class="attribute">Install</span> using &#x27;wsl.exe --install &lt;Distro&gt;&#x27;.</span><br><span class="line"></span><br><span class="line"><span class="attribute">NAME</span>                            FRIENDLY NAME</span><br><span class="line"><span class="attribute">Ubuntu</span>                          Ubuntu</span><br><span class="line"><span class="attribute">Debian</span>                          Debian GNU/Linux</span><br><span class="line"><span class="attribute">kali</span>-linux                      Kali Linux Rolling</span><br><span class="line"><span class="attribute">Ubuntu</span>-<span class="number">18</span>.<span class="number">04</span>                    Ubuntu <span class="number">18</span>.<span class="number">04</span> LTS</span><br><span class="line"><span class="attribute">Ubuntu</span>-<span class="number">20</span>.<span class="number">04</span>                    Ubuntu <span class="number">20</span>.<span class="number">04</span> LTS</span><br><span class="line"><span class="attribute">Ubuntu</span>-<span class="number">22</span>.<span class="number">04</span>                    Ubuntu <span class="number">22</span>.<span class="number">04</span> LTS</span><br><span class="line"><span class="attribute">Ubuntu</span>-<span class="number">24</span>.<span class="number">04</span>                    Ubuntu <span class="number">24</span>.<span class="number">04</span> LTS</span><br><span class="line"><span class="attribute">OracleLinux_7_9</span>                 Oracle Linux <span class="number">7</span>.<span class="number">9</span></span><br><span class="line"><span class="attribute">OracleLinux_8_7</span>                 Oracle Linux <span class="number">8</span>.<span class="number">7</span></span><br><span class="line"><span class="attribute">OracleLinux_9_1</span>                 Oracle Linux <span class="number">9</span>.<span class="number">1</span></span><br><span class="line"><span class="attribute">openSUSE</span>-Leap-<span class="number">15</span>.<span class="number">6</span>              openSUSE Leap <span class="number">15</span>.<span class="number">6</span></span><br><span class="line"><span class="attribute">SUSE</span>-Linux-Enterprise-<span class="number">15</span>-SP5    SUSE Linux Enterprise <span class="number">15</span> SP5</span><br><span class="line"><span class="attribute">SUSE</span>-Linux-Enterprise-<span class="number">15</span>-SP6    SUSE Linux Enterprise <span class="number">15</span> SP6</span><br><span class="line"><span class="attribute">openSUSE</span>-Tumbleweed             openSUSE Tumbleweed</span><br></pre></td></tr></table></figure><h3 id="建置-Linux-子系統"><a href="#建置-Linux-子系統" class="headerlink" title="建置 Linux 子系統"></a>建置 Linux 子系統</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --install -d &lt;Distro&gt;</span><br></pre></td></tr></table></figure><h3 id="列出以安裝的-Linux-子系統"><a href="#列出以安裝的-Linux-子系統" class="headerlink" title="列出以安裝的 Linux 子系統"></a>列出以安裝的 Linux 子系統</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --list</span><br></pre></td></tr></table></figure><p>Output:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Windows</span> Subsystem for Linux Distributions:</span><br><span class="line"><span class="attribute">Ubuntu</span>-<span class="number">22</span>.<span class="number">04</span> (Default)</span><br></pre></td></tr></table></figure><blockquote><p>有 (Default) 代表為預設啟動</p></blockquote><h3 id="設定預設啟動的-Linux-子系統"><a href="#設定預設啟動的-Linux-子系統" class="headerlink" title="設定預設啟動的 Linux 子系統"></a>設定預設啟動的 Linux 子系統</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --set-default &lt;Distro&gt;</span><br></pre></td></tr></table></figure><h3 id="進入-Linux-子系統"><a href="#進入-Linux-子系統" class="headerlink" title="進入 Linux 子系統"></a>進入 Linux 子系統</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl</span><br></pre></td></tr></table></figure><blockquote><p>使用 <code>exit</code> 可以退出子系統</p></blockquote><h3 id="移除特定的-Linux-子系統"><a href="#移除特定的-Linux-子系統" class="headerlink" title="移除特定的 Linux 子系統"></a>移除特定的 Linux 子系統</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --unregister &lt;Distro&gt;</span><br></pre></td></tr></table></figure><blockquote><p>注意! 會刪除子系統內的所有檔案</p></blockquote><h3 id="更新-WSL"><a href="#更新-WSL" class="headerlink" title="更新 WSL"></a>更新 WSL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --update</span><br></pre></td></tr></table></figure><h3 id="查詢更多-WSL-相關命令"><a href="#查詢更多-WSL-相關命令" class="headerlink" title="查詢更多 WSL 相關命令"></a>查詢更多 WSL 相關命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><h2 id="如何使用-WSL-進行開發"><a href="#如何使用-WSL-進行開發" class="headerlink" title="如何使用 WSL 進行開發"></a>如何使用 WSL 進行開發</h2><p>前置任務都準備完畢，終於要進入正軌了，開始進入 WSL 建置開發環境~</p><p>創建完 Linux 子系統後就可以進入到子系統內。</p><blockquote><p>以 Ubuntu 22.04 作為執行範例</p></blockquote><h2 id="本機上安裝-VSCode"><a href="#本機上安裝-VSCode" class="headerlink" title="本機上安裝 VSCode"></a>本機上安裝 VSCode</h2><p><a href="https://code.visualstudio.com/">安裝 VSCode</a></p><h2 id="安裝-VSCode-套件"><a href="#安裝-VSCode-套件" class="headerlink" title="安裝 VSCode 套件"></a>安裝 VSCode 套件</h2><p><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl">安裝 WSL 套件</a></p><h3 id="進入-Linux-子系統-1"><a href="#進入-Linux-子系統-1" class="headerlink" title="進入 Linux 子系統"></a>進入 Linux 子系統</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl</span><br></pre></td></tr></table></figure><h3 id="創建工作目錄"><a href="#創建工作目錄" class="headerlink" title="創建工作目錄"></a>創建工作目錄</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/mywork</span><br><span class="line"><span class="built_in">cd</span> ~/mywork</span><br></pre></td></tr></table></figure><blockquote><p>預設在進入子系統時會以 Windows 的工作目錄作為啟動目錄</p></blockquote><h3 id="進入子系統的-VSCode"><a href="#進入子系統的-VSCode" class="headerlink" title="進入子系統的 VSCode"></a>進入子系統的 VSCode</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code .</span><br></pre></td></tr></table></figure><blockquote><p>透過我們在 VSCode 上安裝的 WSL 套件，讓我們可以使用 <code>code .</code> 來開啟當前目錄的 VSCode 編輯器</p></blockquote><p>下一步就是來建置我們的 DevContainer 了</p><h2 id="參考文獻"><a href="#參考文獻" class="headerlink" title="參考文獻"></a>參考文獻</h2><ul><li><a href="https://learn.microsoft.com/zh-tw/windows/wsl/install">https://learn.microsoft.com/zh-tw/windows/wsl/install</a></li><li><a href="https://learn.microsoft.com/zh-tw/windows/wsl/compare-versions">https://learn.microsoft.com/zh-tw/windows/wsl/compare-versions</a></li><li><a href="https://zh.wikipedia.org/zh-tw/%E9%80%82%E7%94%A8%E4%BA%8ELinux%E7%9A%84Windows%E5%AD%90%E7%B3%BB%E7%BB%9F">https://zh.wikipedia.org/zh-tw/%E9%80%82%E7%94%A8%E4%BA%8ELinux%E7%9A%84Windows%E5%AD%90%E7%B3%BB%E7%BB%9F</a></li></ul><div class="flink"><div class="flink-name">文章連結</div><div class="flink-list">      <div class="flink-list-item">        <a href="http://localhost:4000/2025/06/15/wsl-devcontainer-2/" title="DevContainer" target="_blank">          <div class="flink-item-icon">            <img class="no-lightbox" src="undefined" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="DevContainer" />          </div>          <div class="flink-item-name">DevContainer</div>          <div class="flink-item-desc" title="下一篇">下一篇</div>        </a>      </div></div></div>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
